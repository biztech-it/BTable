<project name="" basedir="." default="jar"
         xmlns:ivy="antlib:org.apache.ivy.ant">
  <description>
    This build file is used to create the BTable project
    and works with the common_build.xml file.
  </description>
  <!-- Import the common_build.xml file which contains all the default tasks -->
  <import file="build-res/subfloor-pkg.xml" id="subfloor"/>
  <property name="plugin.name"
            value="BTable"
            description="Name of the plugin"/>
  <property name="stage.dir"
            value="${bin.dir}/stage"
            description="Name of the resource directory"/>
  <tstamp/>
  <!-- Build the project.revision property -->
  <property name="distribution.version" value="${project.stage}-${project.version}"/>
  <echo>distribution.version = ${distribution.version}</echo>
  <property name="plugin.artifact.id" value="${plugin.name}"/>
  <property name="plugin.zipfile" value="${plugin.artifact.id}-${distribution.version}.zip"/>
  <!--=======================================================================
              dist
              Creates a distribution of this project's plugin zip
              ====================================================================-->
  <target name="dist" depends="clean,resolve" description="Creates a distribution">
    <!-- delete and re-create the plugin dist folder tree -->
    <mkdir dir="${stage.dir}"/>
    <mkdir dir="${stage.dir}/${plugin.name}"/>
    <mkdir dir="${stage.dir}/${plugin.name}"/>
    <mkdir dir="${dist.dir}"/>
    <!-- copy the entire plugin to that folder  -->
    <copy todir="${stage.dir}/${plugin.name}/" overwrite="true">
      <fileset dir=".">
        <include name="**/*"/>
		  <exclude name="bin/"/>
		  
		  <exclude name=".idea/"/>
		  <exclude name="build-res/"/>
		  <exclude name="dashboards/*_tmp.*"/>
		  <exclude name="dev-lib/"/>
      	  <exclude name="dist/"/>
      	  <exclude name="src/"/>
      	  <exclude name="*.iml"/>
		  <exclude name="build.*"/>
		  <exclude name="ivy*"/>
		  
      </fileset>
    </copy>
    <!-- create the version file -->
	<tstamp/>			
	<property name="sequential.build.id" value="manual-${DSTAMP}"/>
	<!--echo file="${stage.dir}/${plugin.name}/version.xml" message="&lt;version branch='TRUNK' buildId='${sequential.build.id}'>${distribution.version}&lt;/version>"/-->		       
	<echo file="${stage.dir}/${plugin.name}/version.xml" message="&lt;version branch='${project.stage}' buildId='${sequential.build.id}'>${project.version}&lt;/version>"/>		       
    <!-- create a zip file -->
    <zip zipfile="${dist.dir}/${plugin.zipfile}"
         basedir="${stage.dir}"
         includes="${plugin.name}/**/*"
         excludes="**/Thumbs.db"/>

	<echo file="${dist.dir}/marketplace.xml">&lt;version>
	    &lt;branch>TRUNK&lt;/branch>
		&lt;version>${distribution.version}&lt;/version>
		&lt;name>Trunk&lt;/name>
		&lt;package_url>not defined&lt;/package_url>
		&lt;description>@PLUGIN_PACKAGE_DESCRIPTION&lt;/description>
		&lt;build_id>${sequential.build.id}&lt;/build_id>
		&lt;/version>	</echo>         
    <move tofile="${dist.dir}/${ivy.artifact.id}-${project.revision}.zip" file="${dist.dir}/${plugin.zipfile}"/>


  </target>
  <!--=======================================================================
              install-plugin
              Installs the plugin locally
              ====================================================================-->
  <target name="install-plugin" depends="clean, resolve, dist" description="Installs the plugin locally">
    <fail message="plugin.local.install.solutions.dir not set - cannot copy"
          unless="plugin.local.install.solutions.dir"/>
    <delete dir="${plugin.local.install.solutions.dir}/system/${plugin.name}"/>
    <copy todir="${plugin.local.install.solutions.dir}/system/${plugin.name}">
      <fileset dir="${stage.dir}/${plugin.name}">
        <include name="**/*"/>
      </fileset>
    </copy>
    <get src="http://127.0.0.1:8080/pentaho/Publish?publish=now&amp;class=org.pentaho.platform.plugin.services.pluginmgr.PluginAdapter&amp;userid=${plugin.local.install.user}&amp;password=${plugin.local.install.pass}"
         dest="${stage.dir}/blah.html"/>
  </target>
  <!-- Overriding resolve target so we can add resolve-dev -->
  <target name="resolve"
          depends="resolve-default, resolve-test, resolve-codegen, resolve-runtime, ivy.check-releasable"
          description="Retrieves all the dependent libraries" />
  <target name="resolve-runtime" depends="resolve-init">
    <ivy:resolve file="${ivyfile}" conf="runtime" />
    <ivy:retrieve conf="runtime" pattern="${runtimelib.dir}/[module]-[revision](-[classifier]).[ext]" />
  </target>
  <target name="clean-jars">
    <delete dir="${lib.dir}" />
    <delete dir="${testlib.dir}" />
    <delete dir="${runtimelib.dir}" />
  </target>
</project>
